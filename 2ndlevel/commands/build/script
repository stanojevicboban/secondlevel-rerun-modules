#!/bin/bash
#
# NAME
#
#   build
#
# DESCRIPTION
#
#   Build the site from install profile.
#

# Parse the command options
[ -r $RERUN_MODULES/2ndlevel/commands/build/options.sh ] && {
  source $RERUN_MODULES/2ndlevel/commands/build/options.sh
}

# Read module function library
[ -r $RERUN_MODULES/2ndlevel/lib/functions.sh ] && {
  source $RERUN_MODULES/2ndlevel/lib/functions.sh
}

# ------------------------------
# Your implementation goes here.
# ------------------------------

set -e

# Install composer before running make, if not already installed
# (Will only work on PHP 5.3+)
drush dl composer-8.x-1.0-alpha8 --no

# Convert to absolute paths
BUILDFILE=`realpath "$BUILDFILE"`
DESTINATION=`realpath "$DESTINATION"`

# Drush make the site structure
echo "Running Drush Make..."
echo "Changing into " `dirname $BUILDFILE`
cd `dirname $BUILDFILE` # Must be in dir for drush make's includes[] to work.
echo "Using " $BUILDFILE " to drush make into " $DESTINATION
cat ${BUILDFILE} | sed "s/^\(projects\[${PROJECT}\].*\)develop$/\1${REVISION}/" | drush make php://stdin ${DESTINATION} \
  --working-copy \
  --prepare-install \
  --no-gitinfofile \
  --prepare-install \
  --yes

chmod u+w ${DESTINATION}/sites/default/settings.php

# Run only if --install flag is set
[ "${INSTALL:+x}" ] && drush site-install ${PROJECT} \
  --root=${DESTINATION} \
  --account-pass=admin \
  --site-name=${PROJECT} \
  --db-url=mysql://root:root@localhost/${PROJECT} \
  --yes && chmod u+w ${DESTINATION}/sites/default/settings.php

echo "Appending settings.php snippets..."
for f in ${DESTINATION}/profiles/${PROJECT}/tmp/snippets/settings.php/*.settings.php
do
  # Concatenate newline and snippet, then append to settings.php
  echo "" | cat - $f | tee -a ${DESTINATION}/sites/default/settings.php > /dev/null
done

chmod u-w ${DESTINATION}/sites/default/settings.php

echo "Prepending .htaccess snippets at the start of file."
for f in ${DESTINATION}/profiles/${PROJECT}/tmp/snippets/htaccess/*.before.htaccess
do
  # Prepend a snippet and a new line to the existing .htaccess file
  echo "" | cat $f - | cat - ${DESTINATION}/.htaccess > htaccess.tmp && mv htaccess.tmp ${DESTINATION}/.htaccess
done

# Exact Snippet Replacements
echo "Exact position .htaccess snippets."
# Get number of items properly and use var here

for f in ${DESTINATION}/profiles/${PROJECT}/tmp/snippets/htaccess/*.exact.htaccess
do
    # Looks up regex file: {SAME_NAME}.exact.regex
    EXACT=`echo $f | sed -e 's/\.htaccess/.regex/g' -e 's/tmp\/snippets\/htaccess\///g'`

    # Store the regex in variable for searching
    REGEX=$(<tmp/snippets/regex/$EXACT)

    #Take the regex variable and use in sed command with corresponding htaccess replacements

    # REPLACE
    sed -e "/$REGEX/r $f" ${DESTINATION}/.htaccess > htaccess.tmp && mv htaccess.tmp ${DESTINATION}/.htaccess
done

echo "Appending .htaccess snippets at the end of file..."
for f in ${DESTINATION}/profiles/${PROJECT}/tmp/snippets/htaccess/*.after.htaccess
do
  # Concatenate newline and snippet, then append to the existing .htaccess file
  echo "" | cat - $f | tee -a ${DESTINATION}/.htaccess > /dev/null
done

echo "Copy files into docroot..."
if [ -d ${DESTINATION}/profiles/${PROJECT}/tmp/copy_to_docroot ]; then
 # Copy files into docroot
 cp -r ${DESTINATION}/profiles/${PROJECT}/tmp/copy_to_docroot/. ${DESTINATION}
fi 

command -v compass >/dev/null && {
  echo "Detected 'compass' command as available. Compiling SASS in profiles/${PROJECT}/themes/custom/${PROJECT}..."
  compass compile ${DESTINATION}/profiles/${PROJECT}/themes/custom/${PROJECT}
} || echo "'compass' command unavailable. Not compiling SASS."

# Done
